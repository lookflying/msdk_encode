#include "msdk_encode.h"
#include "stdlib.h"
#include "stdio.h"
#include "assert.h"

FILE* infile;
FILE* outfile;

int main(int argc, char** argv){
	int width = 1280;
	int height = 720;
	int fps = 24;
	int bitrate = 2000;
	msdk_encode_context ctx;
	//	ctx.m_session = (mfxSession)malloc(sizeof(_mfxSession));
	msdk_encode_init(&ctx, width, height, bitrate, fps, MSDK_ENCODE_H264, MFX_TARGETUSAGE_BALANCED);
	//	unsigned char* buf = (unsigned char*)malloc(1280 * 720 * 3 / 2);

	/*infile = fopen("/home/lookflying/john_carter_720p.yuv", "rb");*/
	infile = fopen(argv[1], "rb");
	outfile = fopen("test.264", "wb");
	fseek(infile, 0, SEEK_END);
	unsigned int size = ftell(infile);
	rewind(infile);
	assert(size % (width * height * 3 / 2) == 0);
	assert(infile != NULL && outfile != NULL);
	unsigned char* yuv_buf = (unsigned char*) malloc(width * height * 3 / 2);
	coded_buf outbuf;
	assert(yuv_buf != NULL);
	while(fread(yuv_buf, 1, width*height*3/2, infile) == width*height*3/2){
		msdk_encode_encode_frame(&ctx, yuv_buf, &outbuf, 0);
		printf("buf len = %u\n", outbuf.len);
		fwrite(outbuf.buf, 1, outbuf.len, outfile);
		free(outbuf.buf);
	}
	free(yuv_buf);
	fclose(infile);
	fclose(outfile);
	msdk_encode_close(&ctx);
	return 0;	
}
